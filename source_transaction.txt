class source_xtn extends uvm_sequence_item;
`uvm_object_utils(source_xtn)
  rand bit[7:0] header;
  rand bit[7:0] payload[];
     bit [7:0]parity;
     bit resetn;
     bit error;
     bit pkt_valid;
     bit busy;

   function new(string name="source_xtn");
      super.new(name);
  endfunction

  constraint valid_addr{header[1:0] inside{[0:2]};}
  //constraint valid_length{header[7:2]!==0;}
  constraint valid_size{payload.size==header[7:2];}
    
    function void post_randomize();
       parity=parity^8'b0;
       foreach(payload[i])
            begin
                  parity=parity^payload[i];
             end
  endfunction
   function void do_print(uvm_printer printer);
	super.do_print(printer);

//                   srting name   		bitstream value     size       radix for printing
    printer.print_field( "header", 		this.header, 	    8,		 UVM_DEC		);
	foreach(payload[i])
    printer.print_field( $sformatf("payload[%0d]",i),   this.payload[i],  8,    UVM_DEC);
    printer.print_field( "parity",  this.parity,8,UVM_DEC);

endfunction
     
endclass
